Method 01: Maximum Difference


class Solution
{
    int findMaxDiff(int a[], int n)
    {
	// Your code here	
	int ls[]=new int[n];
	Stack<Integer> st=new Stack<>();
	for(int i=0;i<n;i++){
	   while(st.size()>0&&st.peek()>=a[i]){
	        st.pop();
	   }
	       if(st.isEmpty()){
	           ls[i]=0;
	       }
	       if(!st.isEmpty()){
	        if(st.peek()<a[i]){
	           ls[i]=st.peek();
	       }
	}
	       st.push(a[i]);
	}
	
	int rs[]=new int[n];
	Stack<Integer> s=new Stack<>();
	for(int i=n-1;i>=0;i--){
	   while(s.size()>0&&s.peek()>=a[i]){
	        s.pop();
	   }
	       if(s.isEmpty()){
	           rs[i]=0;
	       }
	       if(!s.isEmpty()){
	        if(s.peek()<a[i]){
	           rs[i]=s.peek();
	       }
	}
	       s.push(a[i]);
	}
	
	int max=0;
	for(int i=0;i<n;i++){
	    max=Math.max(max, Math.abs(ls[i]-rs[i]));
	}
	
	return max;
    }
}
